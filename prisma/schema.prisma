// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Product {
  id                  Int      @id @default(autoincrement())
  name                String   @unique
  originalPrice_cents Int
  currentPrice_cents  Int
  tags                Tag[]
  description         String
  shortDescription    String?
  descriptionImages   Image[]  @relation(name: "description_images")
  coverImage          Image    @relation(name: "cover_image", fields: [coverImageId], references: [id], map: "cover_image_fk")
  videos              Video[]
  launchDate          DateTime

  developer    Company @relation(name: "developer", references: [id], map: "developer_company_fk", fields: [developerId])
  publisher    Company @relation(name: "publisher", references: [id], map: "publisher_company_fk", fields: [publisherId])
  developerId  Int
  publisherId  Int
  coverImageId Int     @unique
}

model Company {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  published Product[] @relation(name: "publisher")
  developed Product[] @relation(name: "developer")
}

model Tag {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  inDropdown Boolean
  products   Product[]
}

model Video {
  id        Int         @id @default(autoincrement())
  source    VideoSource
  alt       String
  url       String
  product   Product?    @relation(fields: [productId], references: [id])
  productId Int?
  thumbnail Image?       @relation(fields: [thumbnailId], references: [id])
  thumbnailId   Int?         @unique

  @@unique([source, url])
}

model Image {
  id                   Int      @id @default(autoincrement())
  url                  String
  alt                  String
  productDescription   Product? @relation(fields: [productDescriptionId], references: [id], map: "product_description_fk", name: "description_images")
  productDescriptionId Int?     @map("productDescriptionId")
  productCover         Product? @relation(map: "product_cover_fk", name: "cover_image")
  videoThumbnail       Video?   @relation(map: "video_thumbnail_fk")
}

enum VideoSource {
  YOUTUBE
  CLOUDINARY
}
